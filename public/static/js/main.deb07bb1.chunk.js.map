{"version":3,"sources":["services/UserService.js","components/Homepage.js","components/Navbar.js","components/Signup.js","components/Login.js","components/SingleFestival.js","components/FestivalIndex.js","components/NAFestivalIndex.js","components/Profile.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["UserService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","axios","create","baseURL","process","withCredentials","Homepage","react_default","a","createElement","id","className","src","alt","placeholder","Component","Navbar","showLogIn","props","user","NavLink","to","onClick","class","href","Signup","state","usernameInput","passwordInput","handleChange","e","setState","defineProperty","target","name","value","handleFormSubmit","preventDefault","userFromDB","logTheUserIntoAppComponent","history","push","catch","err","console","log","_this2","onSubmit","type","required","onChange","Link","Login","SingleReview","oneFestival","loading","fetchFestival","Axios","concat","responseFromApi","showOneFestival","fromDB","title","start_time","city","country","venue_name","venue_address","price","description","soundRating","showLoader","react_loader_spinner_default","color","height","width","theID","match","params","FestivalIndex","allTheFestivals","fetchFestivals","pageNumber","events","event","showAllFestivals","map","eachFestival","key","_id","image","medium","url","city_name","region_name","country_abbr","theURL","window","location","pathname","split","length","Profile","showUserProfile","showUser","Main","loggedInUser","logInTheUser","userToLogIn","logOutTheUser","fetchUser","theActualUserFromDB","_this3","components_Navbar","Switch","Route","exact","path","render","components_Homepage","assign","components_FestivalIndex","NAFestivalIndex","SingleFestival","components_Signup","components_Login","components_Profile","App","src_Main","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.deb07bb1.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nclass UserService {\n\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true\n    });\n\n\n    this.service = service;\n  }\n\n\n//   axios.create allows you to preconfigure the url (and headers) of axios requests\n// so that when we make an axios request with that object, we pass in a url, and that url gets added onto the end of the url we created the axios object with\n    signup = (username, password) => {\n        return this.service.post('/signup', {username, password})\n        .then(response => response.data)\n    }\n\n\n    login = (username, password) => {\n        return this.service.post('/login', {username, password})\n        .then(response => response.data)\n    }\n\n\n    loggedin = () =>{\n        return this.service.get('/loggedin')\n        .then(response => response.data)\n    }\n\n\n    logout = () =>{\n        return this.service.post('/logout', {})\n        .then(response => response.data)\n    }\n\n\n\n\n}\n\nexport default UserService;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\n\nclass Homepage extends Component{\n\n\n\n    render(){\n        return(\n                <div>\n                    <div id=\"home\" className=\"bg\">\n                        <div>\n                            <img src=\"/festreview-logo.png\" alt=\"\"></img>\n                            <br/>\n                        <span>Real Reviews, from Real Festival Goers!</span>\n                        <br/>\n                        <span>Plan your next adventure or relive a wonderful experience.</span>\n                        </div>\n                    </div>\n                    <div id=\"festivals\" className=\"bg\">\n                        <div>\n                        <h1>Find Yourself</h1>\n                        <span>Music is what moves us. No matter your taste, FestReview.com will have the music fest for you!</span>\n                        <br/>\n                        <a className = \"button is-info\">View Festivals</a>\n                        </div>\n                    </div>\n                    <div id=\"reviews\" className=\"bg\">\n                        <div>\n                        <h1>Review some of the best moments of your life</h1>\n                        <span>Music festivals help bring people together, share commonalities, and spread love.</span>\n                        <br/>\n                        <span>Nothing is perfect, and there is always room to improve.<br/> Review the festivals you've attended to help improve the overall experience of other Fest Goers!</span>\n                        <br/>\n                        <a className = \"button is-info\">Sign up now!</a>\n                        </div>\n                    </div>\n                    <div id=\"aboutUs\" className=\"bg\">\n                        <div>\n                        <h1>About us</h1>\n                        <span>We strive to bring you genuine, honest reviews regarding Music Festivals.</span>\n                        <br/>\n                        <span>Every festival should feel magical and secure.</span>\n                        <br/>\n                        <a className = \"button is-info\">Get to know us better</a>\n                        </div>\n                    </div>\n                    <div className=\"newsletter\">\n                        <p>Sign up for our newsletter and stay on top of the latest festival information!</p>\n                        <div>\n                        Email:\n                        <input placeholder=\"your.email@example.com\"/>\n                        <button>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            \n        )\n    }\n\n}\n\n\n\nexport default Homepage;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport {NavLink} from 'react-router-dom'\n// import UserService from './services/UserService';\n\n\nclass Navbar extends Component {\n    \n    showLogIn = () => {\n        if(!this.props.user){\n            return (\n                <span>\n                    <NavLink to=\"/signup\"> Sign Up For Account</NavLink>\n                 <NavLink to=\"/login\"> Login </NavLink>\n             \n             </span>\n            )\n        } else {\n            return (\n                    <span>\n                      <NavLink to=\"/profile\"> Profile </NavLink>\n                      <button onClick = {this.props.logout}>Logout</button>\n                      \n                    </span>\n            )\n        }\n    }\n\n    \n    render(){\n      return(\n        <nav className=\"navbar is-fixed-top is-warning\">\n        <div className=\"navbar-brand navbar-item\">\n            <NavLink to=\"/\">\n            <img src=\"/festreview-logo.png\" alt=\"FestReview\"/>\n            </NavLink>\n            <div className=\"navbar-burger burger\">\n            <span></span>\n            <span></span>\n            <span></span>\n            </div>\n        </div>\n\n        <div  className=\"navbar-menu\">\n            <div className=\"navbar-end\">\n                <a className=\"navbar-item\">\n                    <NavLink to=\"/\">Home</NavLink>\n                </a>\n\n        <div class=\"navbar-item has-dropdown is-hoverable\">\n            <a class=\"navbar-link\" href=\"http://localhost:3000/festivals/1\">\n            Festivals\n            </a>\n            <div class=\"navbar-dropdown is-boxed\">\n            <a class=\"navbar-item\">\n                <NavLink to=\"/festivals/na/1\">North America</NavLink>\n            </a>\n            <a class=\"navbar-item\" href=\"/\">\n                South America\n            </a>\n            <a class=\"navbar-item\" href=\"/\">\n                Europe\n            </a>\n            <a class=\"navbar-item\" href=\"/\">\n                Other International\n            </a>\n            <hr class=\"navbar-divider\"/>\n            <a className=\"navbar-item is-active\">\n                        <NavLink to=\"/festivals/1\">All Festivals</NavLink>\n                    </a>\n            </div>\n        </div>\n                <a className=\"navbar-item\">\n                    {this.showLogIn()}\n                </a>\n                <a className=\"navbar-item\">\n                <NavLink to=\"/\">About Us</NavLink>\n                </a>\n        </div>\n        </div>\n        \n        </nav>\n      )\n    }\n  }\n  \nexport default Navbar;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\nimport UserService from '../services/UserService';\nimport {Link} from 'react-router-dom'\n\n\nclass Signup extends Component {\n      state = { usernameInput: '', passwordInput: '' };\n      service = new UserService();\n    \n  \n    handleChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleFormSubmit = (e) =>{\n        e.preventDefault();\n        this.service.signup(this.state.usernameInput, this.state.passwordInput)\n        .then((userFromDB)=>{\n            this.props.logTheUserIntoAppComponent(userFromDB)\n          \n            this.setState({usernameInput: '', passwordInput: ''})\n\n            this.props.history.push('/FestivalIndex');\n            this.props.history.push('/');\n\n        })\n        .catch((err)=>{\n            console.log('sorry something went wrong', err)\n\n        })\n\n    }\n  \n    render(){\n      return(\n        <div className=\"signUp\">\n            <form onSubmit={this.handleFormSubmit}>\n                <label>Username:</label>\n                <input type=\"text\" name=\"usernameInput\"  value={this.state.usernameInput} required onChange={ e => this.handleChange(e)}/>\n                \n                <label>Password:</label>\n                <input type=\"password\" name=\"passwordInput\"  value={this.state.passwordInput} required onChange={ e => this.handleChange(e)} />\n                \n                <input type=\"submit\" value=\"Signup\" />\n            </form>\n\n            <p>Already have account? \n                <Link to={\"/login\"}> Login</Link>\n            </p>\n        </div>\n      )\n    }\n  }\n  \n  export default Signup;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\nimport UserService from '../services/UserService';\nimport {Link} from 'react-router-dom'\n\n\nclass Login extends Component {\n      state = { usernameInput: '', passwordInput: '' };\n      service = new UserService();\n    \n  \n    handleChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleFormSubmit = (e) =>{\n        e.preventDefault();\n        this.service.login(this.state.usernameInput, this.state.passwordInput)\n        .then((userFromDB)=>{\n            this.props.logTheUserIntoAppComponent(userFromDB)\n            this.setState({usernameInput: '', passwordInput: ''})\n\n           \n            this.props.history.push('/profile');\n        })\n        .catch((err)=>{\n            console.log('sorry something went wrong', err)\n\n        })\n\n    }\n  \n    render(){\n      return(\n        <div>\n            <form onSubmit={this.handleFormSubmit}>\n                <label>Username:</label>\n                <input type=\"text\" name=\"usernameInput\" value={this.state.usernameInput} required onChange={ e => this.handleChange(e)}/>\n                \n                <label>Password:</label>\n                <input type=\"password\" name=\"passwordInput\" value={this.state.passwordInput} required onChange={ e => this.handleChange(e)} />\n                \n                <input type=\"submit\" value=\"Login\" />\n            </form>\n\n\n        </div>\n      )\n    }\n}\n  \n  export default Login;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\nimport Loader from 'react-loader-spinner'\nimport FestivalIndex from './FestivalIndex';\n\n\nclass SingleReview extends Component{\n    state={\n        oneFestival: {},\n        loading: true,\n    }\n\n    componentWillMount(props){\n        const theID = this.props.match.params.id;\n        console.log (\"here is a single festival ID: ------------->>>>>>>\", theID)\n        this.fetchFestival(theID)\n    }\n\n    fetchFestival = (id) =>{\n        Axios.get(`${process.env.REACT_APP_API_URL}/festival/${id}`)\n        .then((responseFromApi)=>{\n            console.log(\" <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< here is a single festival\", responseFromApi.data.oneFestival)\n\n            console.log(\"getting 1 fest.....\", id)\n            this.setState({oneFestival: responseFromApi.data.oneFestival, loading: false})\n        })    \n        .catch((err)=>{\n        })\n    }\n\n    // handleSubmit = (e) => { \n    //     e.preventDefault()\n    //     const festCopy = [...this.state.oneFestival]\n    //     festCopy.push( \n    //         {oneFestival: this.state.value},\n    //     )\n    //     this.setState({\n    //       oneFestival: festCopy, \n    //     })\n\n    // }\n\n    showOneFestival = () => {\n       const oneFestival = this.state.oneFestival; \n        if(oneFestival.fromDB !== true){\n            console.log(oneFestival)\n        //     const allFestivals = this.state.allTheFestivals.filter((eachFestival)=>{\n        //         return eachFestival.save()\n        //     })\n\n                return(\n                    <div className=\"festIndex-container\">\n                         <h1>Details Page</h1>\n                         {/* <img src ={oneFestival.images.image.medium.url} alt=\"Festival Image\"/>                        */}\n                            <h1>{oneFestival.title}'s details:</h1>\n                            <h2>When: {oneFestival.start_time}</h2>\n                            <h3>Where: {oneFestival.city}, {oneFestival.country}</h3>\n                            <h3>Venue: {oneFestival.venue_name} <br/> {oneFestival.venue_address}</h3>\n                            <h4>Festival price: {oneFestival.price}</h4>\n                            <h6>Festival Details: {oneFestival.description}</h6>\n                            <div>\n                                <button className=\"button is-info\">No reviews yet? Submit one now!</button>\n                            </div>\n                    </div>\n                )\n            \n                } else if (oneFestival.fromDB) {\n                    \n                    return (\n                        <div className=\"festIndex-container\">\n                         <h1>Details Page</h1>\n                         {/* <img src ={oneFestival.images.image.medium.url} alt=\"Festival Image\"/>                        */}\n                            <h1>{oneFestival.title}'s details:</h1>\n                            <h2>When: {oneFestival.start_time}</h2>\n                            <h3>Where: {oneFestival.city}, {oneFestival.country}</h3>\n                            <h3>Venue: {oneFestival.venue_name} <br/> {oneFestival.venue_address}</h3>\n                            <h4>Festival price: {oneFestival.price}</h4>\n                            <h6>Festival Details: {oneFestival.description}</h6>\n                            <h5>Sound Rating: {oneFestival.soundRating}</h5>\n\n                            \n                        </div>\n                    )\n            \n                }\n    }       \n    // }\n\n    showLoader = () => {\n        if(this.state.loading){\n            return(\n                <div>\n                    <span>🎶Getting festival details...🎶</span>\n                    <Loader \n                    type=\"Puff\"\n                    color=\"#ffe680\"\n                    height=\"85vh\"\t\n                    width=\"85vw\"/> \n                </div>\n            )\n            } else {\n                return\n            }\n    }\n\n\n\n    render(){\n     \n        return(\n            <div>\n                <div>\n                {this.showLoader()}\n\n                </div>\n                {this.showOneFestival()}\n                <br />\n                <br />\n                <br />\n                <br />\n            \n\n            \n\n        </div>\n        )\n    }\n\n\n\n\n}\n\n\n\nexport default SingleReview;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\nimport Loader from 'react-loader-spinner'\n\nimport SingleFestival from './SingleFestival';\n\n\nclass FestivalIndex extends Component{\n    state={\n        allTheFestivals: [],\n        loading: true,\n    }\n\n    componentWillMount(props){\n        let theURL = window.location.pathname.split('/')\n        this.fetchFestivals(theURL[theURL.length-1])\n    }\n\n\n    fetchFestivals = (pageNumber) =>{\n        Axios.get(`${process.env.REACT_APP_API_URL}/festivals/${pageNumber}`)\n        .then((responseFromApi)=>{\n                this.setState({allTheFestivals: responseFromApi.data.events.event, loading: false})\n                console.log(\"yoyoyoyoyo here i am \", this.state)\n        })    \n        .catch((err)=>{\n        })\n    }\n\n    showAllFestivals = () => {\n        \n        if(this.state.allTheFestivals){\n        //     const allFestivals = this.state.allTheFestivals.filter((eachFestival)=>{\n        //         return eachFestival.save()\n        //     })\n\n            return this.state.allTheFestivals.map((eachFestival)=>{\n                // const festID = eachFestival.id \n                // console.log (\"here is each fest ID to push------>>>\",festID)\n                // console.log (\"here is each fest ID to push------>>>\",eachFestival._id)\n                return(\n                    <div className=\"media\" key={eachFestival._id}>\n                   \n                   <figure className=\"media-left\">\n                            <p className=\"image is-64x64\">\n                    <Link to={`/festival/${eachFestival.id}`}>\n                    \n                    {eachFestival.image ? <img src={eachFestival.image.medium.url} alt={`${eachFestival.title}`} /> : eachFestival.image = <img src=\"http://54.163.73.103/configfiles/No_Image.png\" alt={`${eachFestival.title}`}/>}\n                    </Link>\n                            </p>\n                        </figure>\n                        <div className=\"media-content\">\n                            <div className=\"content\">\n                            <p>\n                            <Link to={`/festival/${eachFestival.id}`}>\n                                <strong>{eachFestival.title}</strong>\n                                </Link> <small>Where: {eachFestival.city_name}, {eachFestival.region_name}, {eachFestival.country_abbr} </small> \n                                <small>When: {eachFestival.start_time}</small>\n                                <br/>\n                                Description: {eachFestival.description}\n                            </p>\n                            </div>\n                            <nav className=\"level is-mobile\">\n                            <div className=\"level-left\">\n                                <a className=\"level-item\">\n                                <Link to={`/festival/${eachFestival.id}`}>\n                                <span>See Details</span>\n                                \n                                </Link>\n                                </a>\n                            </div>\n                            </nav>\n                        </div>\n\n                    </div>\n            )\n            \n        })\n    }       \n    }\n\n    showLoader = () => {\n        if(this.state.loading){\n            return(\n                <div className = \"loadingText\">\n                    <h2>🎶Getting all the festivals...🎶</h2>\n                    <Loader \n                    type=\"Audio\"\n                    color=\"#ffe680\"\n                    height=\"85vh\"\t\n                    width=\"85vw\"/> \n                </div>\n            )\n            } else {\n                return\n            }\n    }\n\n    render(){\n        return(\n            <div className=\"list-of-festivals-container\">\n                <div>\n                {this.showLoader()}\n                </div>\n\n            <div>\n            {this.showAllFestivals()}\n            </div>\n\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default FestivalIndex;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\nimport Loader from 'react-loader-spinner'\n\nimport SingleFestival from './SingleFestival';\n\n\nclass FestivalIndex extends Component{\n    state={\n        allTheFestivals: [],\n        loading: true,\n    }\n\n    componentWillMount(props){\n        let theURL = window.location.pathname.split('/')\n        this.fetchFestivals(theURL[theURL.length-1])\n    }\n\n\n    fetchFestivals = (pageNumber) =>{\n        Axios.get(`${process.env.REACT_APP_API_URL}/festivals/na/${pageNumber}`)\n        .then((responseFromApi)=>{\n                this.setState({allTheFestivals: responseFromApi.data.events.event, loading: false})\n                console.log(\"yoyoyoyoyo here i am in the USA \", this.state)\n        })    \n        .catch((err)=>{\n        })\n    }\n\n    showAllFestivals = () => {\n        \n        if(this.state.allTheFestivals){\n        //     const allFestivals = this.state.allTheFestivals.filter((eachFestival)=>{\n        //         return eachFestival.save()\n        //     })\n\n            return this.state.allTheFestivals.map((eachFestival)=>{\n                return(\n                    <div className=\"media\" key={eachFestival._id}>\n\n\n                    \n\n                   \n\n                   \n                        {/* <h3>{eachFestival.title}</h3>\n                        <h3>When: {eachFestival.start_time}</h3>\n                        <h3>Where: {eachFestival.city_name}, {eachFestival.region_name}</h3>\n                        <h3>Venue: {eachFestival.venue_name} <br/> {eachFestival.venue_address}</h3>\n                        <h6>Festival Details: {eachFestival.description}</h6> */}\n                      \n                        <figure className=\"media-left\">\n                            <p className=\"image is-64x64\">\n                    <Link to={`/festival/${eachFestival.id}`}>\n                    \n                    {eachFestival.image ? <img src={eachFestival.image.medium.url} alt={`${eachFestival.title}`} /> : eachFestival.image = <img src=\"http://54.163.73.103/configfiles/No_Image.png\" alt={`${eachFestival.title}`}/>}\n                    </Link>\n                            </p>\n                        </figure>\n                        <div className=\"media-content\">\n                            <div className=\"content\">\n                            <p>\n                            <Link to={`/festival/${eachFestival.id}`}>\n                                <strong>{eachFestival.title}</strong>\n                                </Link> <small>Where: {eachFestival.city_name}, {eachFestival.region_name} </small> \n                                <small>When: {eachFestival.start_time}</small>\n                                <br/>\n                                Description: {eachFestival.description}\n                            </p>\n                            </div>\n                            <nav className=\"level is-mobile\">\n                            <div className=\"level-left\">\n                                <a className=\"level-item\">\n                                <Link to={`/festival/${eachFestival.id}`}>\n                                <span>See Details</span>\n                                \n                                </Link>\n                                </a>\n                                \n                            </div>\n                            </nav>\n                        </div>\n\n\n\n                    </div>\n                    \n            )\n            \n        })\n    }       \n    }\n\n    showLoader = () => {\n        if(this.state.loading){\n            return(\n                <div>\n                    <span>🎶Getting all the festivals...🎶</span>\n                    <Loader \n                    type=\"Audio\"\n                    color=\"#ffe680\"\n                    height=\"85vh\"\t\n                    width=\"85vw\"/> \n                </div>\n            )\n            } else {\n                return\n            }\n    }\n\n    render(){\n        return(\n            <div>\n                <div>\n                {this.showLoader()}\n                </div>\n\n            <div className=\"list-of-festivals-container\">\n            {/* <nav class=\"pagination is-rounded\" role=\"navigation\" aria-label=\"pagination\">\n                <a class=\"pagination-previous\">Previous</a>\n                <a class=\"pagination-next\">Next page</a>\n            </nav> */}\n            {this.showAllFestivals()}\n            </div>\n\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default FestivalIndex;","import React, {Component} from 'react';\nimport \"../App.css\";\nimport Axios from 'axios';\nimport UserService from '../services/UserService';\nimport {Link} from 'react-router-dom'\n\n\nclass Profile extends Component {\n    //   state = { usernameInput: '', passwordInput: '' };\n    //   service = new UserService();\n    \n  \n    handleChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleFormSubmit = (e) =>{\n        e.preventDefault();\n        this.service.signup(this.state.usernameInput, this.state.passwordInput)\n        .then((userFromDB)=>{\n            this.props.logTheUserIntoAppComponent(userFromDB)\n          \n            this.setState({usernameInput: '', passwordInput: ''})\n\n            \n            this.props.history.push('/');\n\n        })\n        .catch((err)=>{\n            console.log('sorry something went wrong', err)\n\n        })\n\n    }\n\n    showUserProfile = () =>{\n        if(this.props.showUser){\n            console.log('asdfasdfasdf', this.props.showUser)\n\n            return(\n                <div>Welcome, {this.props.showUser.username}</div>\n            )\n            } else {\n                return\n            }\n\n        \n    }\n  \n    render(){\n      return(\n        <div className=\"profile\">\n            Here is your profile\n            {this.showUserProfile()}\n        </div>\n      )\n    }\n  }\n  \n  export default Profile;","import React, { Component } from 'react';\nimport {Route, Switch, Link} from 'react-router-dom';\nimport './App.css';\nimport Axios from 'axios';\n\n\n\n\nimport UserService from './services/UserService';\nimport Homepage  from './components/Homepage';\nimport Navbar from './components/Navbar';\nimport Signup from './components/Signup';\nimport Login  from './components/Login';\nimport FestivalIndex from './components/FestivalIndex';\nimport NAFestivalIndex from './components/NAFestivalIndex';\nimport SingleFestival from './components/SingleFestival';\nimport Profile  from './components/Profile';\n\nclass Main extends Component {\n    state={\n        loggedInUser: null,\n    }\n    service = new UserService()\n    \n    componentDidMount(props){\n        this.fetchUser()\n    } \n    \n    fetchUser(){\n        this.service.loggedin()\n        .then(theActualUserFromDB =>{\n            console.log('signed in', theActualUserFromDB)\n            this.setState({\n                loggedInUser:  theActualUserFromDB\n            }) \n\n        })\n        .catch( err =>{\n            console.log(err,'catch getting hit')\n            this.setState({\n                loggedInUser:  false\n            }) \n        })\n    }\n    \n    logInTheUser = (userToLogIn) => {\n        this.setState({loggedInUser: userToLogIn})\n    }\n\n    showUser = () =>{\n        if(this.state.loggedInUser){\n        return(\n            <div>Welcome, {this.state.loggedInUser.username}</div>\n        )\n        } else {\n            return\n        }\n    }\n\n    logOutTheUser = () => {\n        this.service.logout()\n        .then(()=> {\n            this.setState({loggedInUser: null})\n        })\n    }\n    \n    \n    \n    render() {\n   \n        return (\n            <div>\n                \n                <div>\n                    <Navbar user={this.state.loggedInUser} logout={this.logOutTheUser}/>\n                </div>\n\n                <div className=\"component-container\">\n                <Switch>\n                    <Route exact path=\"/\" render = {(props)=> <Homepage {...props} logTheUserIntoAppComponent = {this.logInTheUser} logout={this.logOutTheUser}/> }/>\n                    <Route exact path=\"/festivals/:page\" render = {(props)=> <FestivalIndex {...props} logTheUserIntoAppComponent = {this.logInTheUser} logout={this.logOutTheUser}/> }/>\n                    <Route exact path=\"/festivals/na/:page\" render = {(props)=> <NAFestivalIndex {...props} logTheUserIntoAppComponent = {this.logInTheUser} logout={this.logOutTheUser}/> }/>\n                    <Route exact path=\"/festival/:id\" render = {(props)=> <SingleFestival {...props} logTheUserIntoAppComponent = {this.logInTheUser} logout={this.logOutTheUser}/>  } />\n                    <Route path=\"/signup\" render = {(props)=> <Signup {...props} logTheUserIntoAppComponent = {this.logInTheUser} logout={this.logOutTheUser}/>  } />\n                    <Route path=\"/login\" render = {(props)=> <Login {...props} logTheUserIntoAppComponent = {this.logInTheUser} logout={this.logOutTheUser} />  } />\n                    <Route path=\"/profile\" render = {(props)=> <Profile {...props} logTheUserIntoAppComponent = {this.logInTheUser} logout={this.logOutTheUser} showUser={this.showUser}/>  } />\n            \n                </Switch>\n            {/* {this.showUser()} */}\n\n\n                </div>\n            </div>\n            );\n        }\n    }\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from \"./Main\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bulma/css/bulma.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport Loader from 'react-loader-spinner'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}